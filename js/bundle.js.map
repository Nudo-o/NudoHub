{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAkC;AACa;AACI;AACA;AACN;AACA;AACT;AACA;AACpC;AACO,mBAAmB,yCAAM;AAChC;AACO,sBAAsB,uDAAK;AAC3B;AACP;AACO,wBAAwB,gEAAW;AACnC,wBAAwB,gEAAW;AAC1C;AACO,qBAAqB,6DAAQ;AAC7B,2BAA2B,6DAAQ;AACnC,4BAA4B,6DAAQ;AACpC,4BAA4B,6DAAQ;AACpC,uBAAuB,6DAAQ;AACtC;AACO,oBAAoB,6DAAQ;AAC5B,yBAAyB,6DAAQ;AACjC,uBAAuB,6DAAQ;AACtC;AACO,yBAAyB,8DAAS;AAClC,qBAAqB,8DAAS;AAC9B,0BAA0B,8DAAS;AACnC,wBAAwB,8DAAS;AACxC;AACA,6DAAQ;AACR,8DAAS;AACT,6DAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,6DAAQ;AAC7E;AACA,oBAAoB,IAAI,6DAAQ,oBAAoB;AACpD,yBAAyB,6DAAQ;AACjC;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;AChDgE;AAC5B;AACD;AACpC;AACe,wBAAwB,uDAAK;AAC5C;AACA;AACA;AACA,kDAAkD,oDAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gDAAS;AACpC,2BAA2B,gDAAS;AACpC;AACA,YAAY,kDAAW,WAAW,kDAAW;AAC7C,gBAAgB,kDAAW,WAAW,kDAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kDAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,oDAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAW;AAC9B;AACA;AACA,YAAY,kDAAW;AACvB,mBAAmB,kDAAW;AAC9B;AACA;AACA,QAAQ,kDAAW;AACnB;AACA;;;;;;;;;;;;;;;;AC7FmD;AACd;AACrC;AACe,0BAA0B,uDAAK;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iDAAU,gBAAgB,iDAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAS;AACrB;AACA,QAAQ,gDAAS;AACjB;AACA;;;;;;;;;;;;;;;;;AC/BwC;AACI;AACP;AACrC;AACe,0BAA0B,uDAAK;AAC9C;AACA,cAAc,iDAAU,gBAAgB,iDAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iDAAU,qBAAqB,iDAAU;AAC9D;AACA,qBAAqB,iDAAU,sBAAsB,iDAAU;AAC/D;AACA;AACA;AACA;AACA,yCAAyC,2DAAQ;AACjD;AACA;AACA;AACA;AACA;AACA,yCAAyC,2DAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9CoD;AACf;AACrC;AACe,uBAAuB,uDAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAW;AACnB,QAAQ,kDAAW,oBAAoB,gDAAS,wBAAwB,gDAAS;AACjF,QAAQ,kDAAW;AACnB,QAAQ,kDAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7CgE;AAC3B;AACrC;AACe,uBAAuB,uDAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAW;AACnB;AACA;AACA,wBAAwB,kDAAW;AACnC;AACA;AACA,QAAQ,kDAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAW,WAAW,2BAA2B,EAAE,0BAA0B,EAAE,iDAAU,aAAa;AAC9G,QAAQ,kDAAW;AACnB,QAAQ,kDAAW;AACnB,QAAQ,kDAAW;AACnB,QAAQ,kDAAW;AACnB,QAAQ,kDAAW;AACnB,QAAQ,kDAAW;AACnB,QAAQ,kDAAW;AACnB;AACA;AACA;AACA,QAAQ,kDAAW;AACnB;AACA;AACA;AACA;AACA,QAAQ,kDAAW,oBAAoB,gDAAS,wBAAwB,gDAAS;AACjF,QAAQ,kDAAW;AACnB;AACA;AACA,YAAY,kDAAW;AACvB;AACA,YAAY,kDAAW;AACvB,YAAY,kDAAW;AACvB,YAAY,kDAAW;AACvB;AACA;AACA,QAAQ,kDAAW;AACnB;AACA,QAAQ,kDAAW;AACnB,QAAQ,kDAAW;AACnB,QAAQ,kDAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtFoE;AAC5B;AACxC;AACA;AACA,IAAI,kDAAW;AACf;AACA,QAAQ,kDAAW;AACnB;AACA,IAAI,kDAAW;AACf,wBAAwB,gDAAS;AACjC,wBAAwB,gDAAS;AACjC;AACA;AACA,IAAI,kDAAW;AACf,IAAI,kDAAW,kBAAkB,uDAAK,OAAO,kDAAW,IAAI,kDAAW;AACvE;AACA;AACA;AACA;;;;;;;;;;;;;;AClBgF;AACjC;AACP;AACxC;AACA;AACA,IAAI,kDAAW;AACf,wBAAwB,gDAAS;AACjC,wBAAwB,gDAAS;AACjC;AACA;AACA,SAAS,kDAAW;AACpB;AACA,kBAAkB,kDAAW,SAAS,kDAAW;AACjD,qBAAqB,kDAAW,uBAAuB,kDAAW;AAClE,gDAAgD,2DAAQ;AACxD;AACA,IAAI,kDAAW,gBAAgB,2DAAQ;AACvC,IAAI,kDAAW,gBAAgB,2DAAQ;AACvC;AACA;AACA;AACA;;;;;;;;;;;;ACrByD;AACzD;AACA;AACA,IAAI,kDAAW;AACf,IAAI,kDAAW;AACf,IAAI,kDAAW;AACf;AACA;AACA;AACA;;;;;;;;;;;;;ACTuD;AACf;AACxC;AACA;AACA,wBAAwB,gDAAS;AACjC;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAS;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB,gDAAS;AACjC;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAS;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAK;AACpC,gCAAgC,uDAAK;AACrC;AACA;AACA;AACA,QAAQ,kDAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;AChG4B;AACF;AACE;;;;;;;;;;;;;;;;ACFiB;AAC9C;AACe;AACf,IAAI,oDAAa;AACjB;AACA;AACA;;;;;;;;;;;;;;ACNe;AACf;AACA;;;;;;;;;;;;;;ACFe;AACf;AACA;;;;;;;;;;;;;;ACFe;AACf;AACA;;;;;;;;;;;;;;;;ACFqC;AACD;AACpC;AACe,qBAAqB,uDAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oDAAQ;AACxD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5BqC;AACoC;AACzE;AACe,uBAAuB,uDAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sDAAM;AAC9B,8BAA8B,2DAAW;AACzC,iCAAiC,8DAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvCO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACO;;;;;;;;;;;;;;;;;AClBiC;AACQ;AACA;AAChD;AACe,sBAAsB,uDAAK;AAC1C;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAc;AACjD,oCAAoC,0DAAc;AAClD;AACA;;;;;;;;;;;;;;;ACbwD;AACxD;AACe;AACf;AACA;AACA;AACA,wBAAwB,iDAAU;AAClC;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACV0D;AACT;AACjD;AACA;AACA;AACe;AACf;AACA,yBAAyB,6DAAQ,YAAY,oDAAa,KAAK,oDAAa,YAAY,oDAAa,KAAK,oDAAa,mBAAmB,iDAAU,2BAA2B,iDAAU;AACzL;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACXwC;AACA;AACI;AACS;AAChB;AACmB;AACxD;AACe,oBAAoB,uDAAK;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iDAAU;AAC9C;AACA,4BAA4B,2DAAQ;AACpC,0BAA0B,yDAAM;AAChC,2BAA2B,qEAAO;AAClC;AACA,wBAAwB,mDAAM;AAC9B,gCAAgC,0DAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrFoE;AACpB;AACF;AACA;AAC9C;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,qCAAqC,iDAAU;AAC/C,2BAA2B,kDAAW;AACtC;AACA;AACA,KAAK;AACL;AACA,qCAAqC,iDAAU;AAC/C,QAAQ,kDAAW;AACnB,QAAQ,6DAAQ;AAChB,QAAQ,8DAAS;AACjB,QAAQ,6DAAQ;AAChB,KAAK;AACL;AACA,qCAAqC,iDAAU;AAC/C,YAAY,oDAAa;AACzB,6BAA6B,oDAAa;AAC1C,gBAAgB,oDAAa;AAC7B,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;AChDgC;AAChC;AACA;AACA,kBAAkB,cAAc;AAChC,0BAA0B,kDAAM;AAChC,6BAA6B,kDAAM;AACnC;AACA;AACA;AACA,+DAAe;;;;;;;;;;;;ACTiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kDAAM;AAClC,4BAA4B,kDAAM;AAClC,gCAAgC,kDAAM;AACtC,yBAAyB,kDAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe;;;;;;;;;;;;;;AC5CiB;AACE;AACE;AACpC;AACA,oBAAoB,mDAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAM;AAC1B;AACA;AACA,2BAA2B,wDAAQ;AACnC,8BAA8B,wDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAM;AAC1B;AACA;AACA,2BAA2B,wDAAQ;AACnC,8BAA8B,wDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA,+DAAe;;;;;;;;;;;;;AC/Ec;AACG;AAChC;AACA;AACA,kBAAkB,4BAA4B;AAC9C,0BAA0B,kDAAM;AAChC,wBAAwB,kDAAM;AAC9B;AACA;AACA;AACA;AACA,4BAA4B,kDAAM;AAClC,4BAA4B,kDAAM;AAClC;AACA;AACA;AACA;AACA,gBAAgB,gDAAI,GAAG,oEAAoE;AAC3F,gBAAgB,gDAAI,GAAG,oEAAoE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe;;;;;;;;;;;;ACpCqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe;;;;;;;;;;;;AC7MiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AACM;AACJ;AACF;AACI;AACsB;AAClB;AACpC;;;;;;;;;;;;;ACPgC;AAChC;AACA;AACA;AACA;AACA,gCAAgC,kDAAM;AACtC,qBAAqB,kDAAM;AAC3B,MAAM;AACN,qBAAqB,kDAAM;AAC3B,MAAM;AACN,qBAAqB,kDAAM;AAC3B,MAAM;AACN,qBAAqB,kDAAM;AAC3B;AACA;AACA;AACA;AACA;AACA,+DAAe;;;;;;;;;;;AClBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+DAAe;;;;;;;;;;;;;;AC9BW;AACA;;;;;;;;;;;;ACD1B;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0BAA0B;AACxC;;;;;;;;;;;;;;ACR8C;AACZ;AACT;AACzB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,CAAC,EAAE,yCAAa;AAChB;AACA,+DAAe;;;;;;;;;;;;;;;;UCXf;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;ACNgI;AACrF;AAClB;AACM;AACyC;AACR;AACU;AACJ;AACtE;AACA;AACA,IAAI,gDAAS;AACb;AACA,IAAI,mDAAY,oBAAoB,6EAAmB;AACvD,IAAI,+CAAQ,oBAAoB,yEAAe;AAC/C,IAAI,oDAAa,oBAAoB,8EAAoB;AACzD,IAAI,kDAAW,oBAAoB,4EAAkB;AACrD;AACA,IAAI,2DAAQ;AACZ,QAAQ,gDAAS;AACjB,KAAK;AACL,CAAC","sources":["webpack://nudo_hub/./src/const.js","webpack://nudo_hub/./src/entities/ButtonBox.js","webpack://nudo_hub/./src/entities/CursorPoint.js","webpack://nudo_hub/./src/entities/GlobalPoint.js","webpack://nudo_hub/./src/entities/ImageBox.js","webpack://nudo_hub/./src/entities/TextDraw.js","webpack://nudo_hub/./src/events/dom/onMousedown.js","webpack://nudo_hub/./src/events/dom/onMousemove.js","webpack://nudo_hub/./src/events/dom/onMouseup.js","webpack://nudo_hub/./src/events/dom/onWheel.js","webpack://nudo_hub/./src/events/initEvents.js","webpack://nudo_hub/./src/events/system/onDiscordButtonClick.js","webpack://nudo_hub/./src/events/system/onForumButtonClick.js","webpack://nudo_hub/./src/events/system/onServerButtonClick.js","webpack://nudo_hub/./src/events/system/onVKButtonClick.js","webpack://nudo_hub/./src/render/Camera.js","webpack://nudo_hub/./src/render/Renderer.js","webpack://nudo_hub/./src/render/RendererEvents.js","webpack://nudo_hub/./src/render/components/Drawing.js","webpack://nudo_hub/./src/render/components/drawBackground.js","webpack://nudo_hub/./src/render/components/drawTextCopied.js","webpack://nudo_hub/./src/scene/Scene.js","webpack://nudo_hub/./src/scene/SceneEvents.js","webpack://nudo_hub/./src/utils/2d/Line.js","webpack://nudo_hub/./src/utils/2d/Physics.js","webpack://nudo_hub/./src/utils/2d/Point.js","webpack://nudo_hub/./src/utils/2d/Rect.js","webpack://nudo_hub/./src/utils/2d/Vector.js","webpack://nudo_hub/./src/utils/2d/getSignedDistance.js","webpack://nudo_hub/./src/utils/2d/index.js","webpack://nudo_hub/./src/utils/2d/toVector.js","webpack://nudo_hub/./src/utils/Emitter.js","webpack://nudo_hub/./src/utils/hooks/index.js","webpack://nudo_hub/./src/utils/hooks/math_hooks.js","webpack://nudo_hub/./src/utils/hooks/number_hooks.js","webpack://nudo_hub/./src/utils/hooks/string_hooks.js","webpack://nudo_hub/./src/utils/index.js","webpack://nudo_hub/webpack/bootstrap","webpack://nudo_hub/webpack/runtime/define property getters","webpack://nudo_hub/webpack/runtime/hasOwnProperty shorthand","webpack://nudo_hub/webpack/runtime/make namespace object","webpack://nudo_hub/./src/index.js"],"sourcesContent":["import config from \"./config.json\"\r\nimport ButtonBox from \"./entities/ButtonBox.js\"\r\nimport CursorPoint from \"./entities/CursorPoint.js\"\r\nimport GlobalPoint from \"./entities/GlobalPoint.js\"\r\nimport ImageBox from \"./entities/ImageBox.js\"\r\nimport TextDraw from \"./entities/TextDraw.js\"\r\nimport Scene from \"./scene/Scene.js\"\r\nimport utils from \"./utils/index.js\"\r\n\r\nexport const mainConfig = config\r\n\r\nexport const mainScene = new Scene(\"#main_canvas\")\r\nexport const mainContext = mainScene.getRenderContext()\r\n\r\nexport const cursorPoint = new CursorPoint()\r\nexport const globalPoint = new GlobalPoint()\r\n\r\nexport const nameText = new TextDraw(\"NUDO\", mainConfig.map.middleSize[0] + 10, mainConfig.map.middleSize[1] - 200, 120, mainConfig.colors.nicknameFill, mainConfig.colors.nicknameStroke, true, 20)\r\nexport const adminLevelText = new TextDraw(\"Administrator 3 level\", mainConfig.map.middleSize[0] + 1, mainConfig.map.middleSize[1] - 140, 24, mainConfig.colors.adminLevelFill, mainConfig.colors.nicknameStroke, false, 2, 0, null, 8)\r\nexport const monitoringText1 = new TextDraw(\"Заместитель главного следящего МО\", mainConfig.map.middleSize[0] + 1, mainConfig.map.middleSize[1] - 113, 18, mainConfig.colors.monitoringFill[0], mainConfig.colors.nicknameStroke, false, 2, 0, null, 8)\r\nexport const monitoringText2 = new TextDraw(\"Следящий за слётами\", mainConfig.map.middleSize[0] + 1, mainConfig.map.middleSize[1] - 90, 18, mainConfig.colors.monitoringFill[1], mainConfig.colors.nicknameStroke, false, 2, 0, null, 8)\r\nexport const serverText = new TextDraw(\"Sun City\", mainConfig.map.middleSize[0] + 1, mainConfig.map.middleSize[1] + 49, 26, mainConfig.colors.serverFill, mainConfig.colors.serverStroke, false, 2, 0, null, 0)\r\n\r\nexport const vkImage = new ImageBox(\"./assets/images/vkicon.png\", -999, -999, 35)\r\nexport const discordImage = new ImageBox(\"./assets/images/discordicon.png\", -999, -999, 38)\r\nexport const forumImage = new ImageBox(\"./assets/images/forumicon.png\", -999, -999, 30)\r\n\r\nexport const serverButton = new ButtonBox(serverText)\r\nexport const vkButton = new ButtonBox(vkImage)\r\nexport const discordButton = new ButtonBox(discordImage)\r\nexport const forumButton = new ButtonBox(forumImage)\r\n\r\nTextDraw.addTextDraw(nameText, adminLevelText, monitoringText1, monitoringText2, serverText)\r\nButtonBox.addButtonBox(serverButton, vkButton, discordButton, forumButton)\r\nImageBox.addImageBox(vkImage, discordImage, forumImage)\r\n\r\ndiscordButton.lastShowTextCopied = null\r\n\r\n! function() {\r\n    const margin = 10\r\n    const size = 35\r\n    const startX = mainConfig.map.middleSize[0] - (size + margin) * (ImageBox.imageBoxes.length / 2 - 0.5)\r\n\r\n    for (let i = 0; i < ImageBox.imageBoxes.length; i++) {\r\n        const imageBox = ImageBox.imageBoxes[i]\r\n\r\n        imageBox.setTo(startX + (size + margin) * i + 1, mainConfig.map.middleSize[1] + 82)\r\n    }\r\n}()\r\n","import { cursorPoint, globalPoint, mainScene } from \"../const.js\"\r\nimport utils from \"../utils/index.js\"\r\nimport TextDraw from \"./TextDraw.js\"\r\n\r\nexport default class ButtonBox extends utils.Point {\r\n    static buttonBoxes = []\r\n\r\n    constructor(boxDraw) {\r\n        const boxDrawMetrics = boxDraw instanceof TextDraw ? boxDraw.getMetrics() : boxDraw\r\n        const x = boxDraw.x - boxDrawMetrics.width / 2\r\n        const y = boxDraw.y - boxDrawMetrics.height / 2\r\n\r\n        super(x - boxDraw.padding, y - boxDraw.padding, boxDrawMetrics.width + boxDraw.padding * 2, boxDrawMetrics.height + boxDraw.padding * 2)\r\n\r\n        this.boxDraw = boxDraw\r\n        \r\n        this.events = new utils.Emitter()\r\n\r\n        this.isClicked = false\r\n        this.isHovered = false\r\n\r\n        this.isReadyForClick = false\r\n    }\r\n\r\n    checkIsHover() {\r\n        const x = this.x - mainScene.getXOffset()\r\n        const y = this.y - mainScene.getYOffset()\r\n\r\n        if (cursorPoint.x >= x && cursorPoint.x <= x + this.width) {\r\n            if (cursorPoint.y >= y && cursorPoint.y <= y + this.height) {\r\n                return true\r\n            }\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    checkIsClick() {\r\n        if (!this.isHovered) return false\r\n\r\n        if (this.isReadyForClick && !cursorPoint.isMouseDown) {\r\n            this.isReadyForClick = false\r\n\r\n            this.events.emit(\"click\")\r\n\r\n            return true\r\n        }\r\n\r\n        if (cursorPoint.isMouseDown) {\r\n            this.isReadyForClick = true\r\n\r\n            return false\r\n        }\r\n    }\r\n\r\n    update() {\r\n        const boxDrawMetrics = this.boxDraw instanceof TextDraw ? this.boxDraw.getMetrics() : this.boxDraw\r\n        const x = this.boxDraw.x - boxDrawMetrics.width / 2\r\n        const y = this.boxDraw.y - boxDrawMetrics.height / 2\r\n\r\n        this.setTo(x - this.boxDraw.padding, y - this.boxDraw.padding)\r\n\r\n        this.isClicked = this.checkIsClick()\r\n        this.isHovered = this.checkIsHover()\r\n\r\n        if (!this.isHovered) {\r\n            this.isReadyForClick = false\r\n        }\r\n    }\r\n\r\n    static addButtonBox(...buttonBoxes) {\r\n        for (const buttonBox of buttonBoxes) {\r\n            ButtonBox.buttonBoxes.push(buttonBox)\r\n        }\r\n    }\r\n\r\n    static updateAllButtonBoxes() {\r\n        for (const buttonBox of ButtonBox.buttonBoxes) {\r\n            buttonBox.update()\r\n        }\r\n\r\n        const isCursorToPointer = !ButtonBox.buttonBoxes.every((buttonBox) => !buttonBox.isHovered)\r\n\r\n        if (isCursorToPointer) {\r\n            return cursorPoint.setType(\"button\")\r\n        }\r\n\r\n        if (globalPoint.isReadyMove) {\r\n            return cursorPoint.setType(\"dragging\")\r\n        }\r\n\r\n        cursorPoint.setType(\"canvas\")\r\n    }\r\n}","import { mainConfig, mainScene } from \"../const.js\"\r\nimport utils from \"../utils/index.js\"\r\n\r\nexport default class CursorPoint extends utils.Point {\r\n    static types = {\r\n        \"canvas\": \"default\",\r\n        \"button\": \"pointer\",\r\n        \"dragging\": \"grab\"\r\n    }\r\n\r\n    constructor() {\r\n        super(mainConfig.map.width / 2, mainConfig.map.height / 2, 0, 0)\r\n\r\n        this.type = \"canvas\"\r\n\r\n        this.isMouseDown = false\r\n    }\r\n\r\n    getType() {\r\n        return this.type\r\n    }\r\n\r\n    setType(type) {\r\n        this.type = type\r\n\r\n        const cursorType = CursorPoint.types[this.type]\r\n\r\n        if (mainScene.view.style.cursor === cursorType) return\r\n\r\n        mainScene.view.style.cursor = cursorType\r\n    }\r\n}","import { mainConfig } from \"../const.js\"\r\nimport Renderer from \"../render/Renderer.js\"\r\nimport utils from \"../utils/index.js\"\r\n\r\nexport default class GlobalPoint extends utils.Point {\r\n    constructor() {\r\n        super(mainConfig.map.width / 2, mainConfig.map.height / 2, 0, 0)\r\n\r\n        this.xVel = 0\r\n        this.yVel = 0\r\n    }\r\n\r\n    isMove() {\r\n        return Boolean(this.xVel || this.yVel)\r\n    }\r\n\r\n    collideBorders() {\r\n        if (this.x < 0) this.x = 0\r\n        if (this.x > mainConfig.map.width) this.x = mainConfig.map.width\r\n        if (this.y < 0) this.y = 0\r\n        if (this.y > mainConfig.map.height) this.y = mainConfig.map.height\r\n    }\r\n\r\n    decelVelocity() {\r\n        if (this.xVel) {\r\n            this.xVel *= Math.pow(0.993, Renderer.delta)\r\n\r\n            if (this.xVel <= 0.01 && this.xVel >= -0.01) this.xVel = 0\r\n        }\r\n\r\n        if (this.yVel) {\r\n            this.yVel *= Math.pow(0.993, Renderer.delta)\r\n\r\n            if (this.yVel <= 0.01 && this.yVel >= -0.01) this.yVel = 0\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (this.isMove()) {\r\n            this.x += this.xVel\r\n            this.y += this.yVel\r\n\r\n            this.decelVelocity()\r\n            this.collideBorders()\r\n        }\r\n    }\r\n}","import { mainContext, mainScene } from \"../const.js\"\r\nimport utils from \"../utils/index.js\"\r\n\r\nexport default class ImageBox extends utils.Point {\r\n    static imageBoxes = []\r\n    \r\n    constructor(imageSrc, x, y, size) {\r\n        super(x, y, size, size)\r\n\r\n        this.imageSrc = imageSrc\r\n\r\n        this.image = new Image()\r\n        this.image.src = this.imageSrc\r\n\r\n        this.image.onload = () => {\r\n            this.image.isLoaded = true\r\n        }\r\n\r\n        this.padding = 0\r\n    }\r\n\r\n    draw() {\r\n        if (!this.image.isLoaded) return\r\n\r\n        mainContext.save()\r\n        mainContext.translate(this.x - mainScene.getXOffset(), this.y - mainScene.getYOffset())\r\n        mainContext.drawImage(this.image, -this.width / 2, -this.height / 2, this.width, this.height)\r\n        mainContext.restore()\r\n    }\r\n\r\n    update() {\r\n        this.draw()\r\n    }\r\n\r\n    static addImageBox(...imageBoxes) {\r\n        for (const imageBox of imageBoxes) {\r\n            ImageBox.imageBoxes.push(imageBox)\r\n        }\r\n    }\r\n\r\n    static updateAllImageBoxes() {\r\n        for (const imageBox of ImageBox.imageBoxes) {\r\n            imageBox.update()\r\n        }\r\n    }\r\n}","import { mainConfig, mainContext, mainScene } from \"../const.js\"\r\nimport utils from \"../utils/index.js\"\r\n\r\nexport default class TextDraw extends utils.Point {\r\n    static textDraws = []\r\n\r\n    constructor(text, x, y, fontSize, fillColor, strokeColor, isBold, letterSpacing, rotation, backgroundColor, padding) {\r\n        super(x, y, 0, 0)\r\n\r\n        this.text = text\r\n        this.fontSize = fontSize\r\n        this.fillColor = fillColor\r\n        this.strokeColor = strokeColor\r\n        this.isBold = isBold\r\n        this.letterSpacing = letterSpacing\r\n        this.rotation = rotation * (Math.PI / 180)\r\n        this.backgroundColor = backgroundColor\r\n\r\n        this.padding = padding === 0 ? padding : padding || 6\r\n    }\r\n\r\n    getMetrics() {\r\n        mainContext.save()\r\n        this.setDrawStyles()\r\n        \r\n        const metrics = mainContext.measureText(this.text)\r\n        const actualHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\r\n\r\n        mainContext.restore()\r\n\r\n        return {\r\n            width: metrics.width,\r\n            height: actualHeight\r\n        }\r\n    }\r\n    \r\n    setDrawStyles() {\r\n        mainContext.font = `${this.isBold ? \"bold \" : \"\"}${this.fontSize.toPixels()} ${mainConfig.defaultFont}`\r\n        mainContext.strokeStyle = this.strokeColor\r\n        mainContext.lineWidth = 8\r\n        mainContext.textBaseline = \"middle\"\r\n        mainContext.textAlign = \"center\"\r\n        mainContext.lineJoin = \"round\"\r\n        mainContext.lineCap = \"round\"\r\n        mainContext.letterSpacing = this.letterSpacing.toPixels()\r\n    }\r\n\r\n    draw() {\r\n        mainContext.save()\r\n        this.setDrawStyles()\r\n\r\n        const metrics = this.getMetrics()\r\n\r\n        mainContext.translate(this.x - mainScene.getXOffset(), this.y - mainScene.getYOffset())\r\n        mainContext.rotate(this.rotation)\r\n\r\n        if (this.backgroundColor) {\r\n            mainContext.fillStyle = this.backgroundColor\r\n\r\n            mainContext.beginPath()\r\n            mainContext.roundRect(-metrics.width / 2 - this.padding, -metrics.height / 2 - this.padding, metrics.width + this.padding * 2, metrics.height + this.padding * 2, 8)\r\n            mainContext.fill()\r\n        }\r\n\r\n        mainContext.fillStyle = this.fillColor\r\n\r\n        mainContext.strokeText(this.text, 0, 0)\r\n        mainContext.fillText(this.text, 0, 0)\r\n        mainContext.restore()\r\n    }\r\n\r\n    update() {\r\n        this.draw()\r\n    }\r\n\r\n    static addTextDraw(...textDraws) {\r\n        for (const textDraw of textDraws) {\r\n            TextDraw.textDraws.push(textDraw)\r\n        }\r\n    }\r\n\r\n    static updateAllTextDraws() {\r\n        for (const textDraw of TextDraw.textDraws) {\r\n            textDraw.update()\r\n        }\r\n    }\r\n}","import { cursorPoint, globalPoint, mainScene } from \"../../const.js\"\r\nimport utils from \"../../utils/index.js\"\r\n\r\nfunction onMousedown(event) {\r\n    cursorPoint.isMouseDown = true\r\n    \r\n    if (globalPoint.isReadyMove) return \r\n\r\n    cursorPoint.setTo(\r\n        event.clientX / mainScene.getScale(), \r\n        event.clientY / mainScene.getScale()\r\n    )\r\n\r\n    globalPoint.isReadyMove = true\r\n    globalPoint.startPoint = new utils.Point(cursorPoint.x, cursorPoint.y, 0, 0)\r\n}\r\n\r\nwindow.addEventListener(\"touchstart\", (event) => onMousedown(event.touches[0]), false)\r\nwindow.addEventListener(\"mousedown\", (event) => onMousedown(event), false)","import { cursorPoint, globalPoint, mainConfig, mainScene } from \"../../const.js\"\r\nimport Renderer from \"../../render/Renderer.js\"\r\nimport utils from \"../../utils/index.js\"\r\n\r\nfunction onMousemove(event) {\r\n    cursorPoint.setTo(\r\n        event.clientX / mainScene.getScale(), \r\n        event.clientY / mainScene.getScale()\r\n    )\r\n    \r\n    if (!globalPoint.isReadyMove) return\r\n\r\n    const angle = cursorPoint.angleTo(globalPoint.startPoint)\r\n    const distance = globalPoint.startPoint.distanceTo(cursorPoint)\r\n    const speed = Math.min(distance * .000035 * Renderer.delta, distance)\r\n    \r\n    globalPoint.xVel = speed * Renderer.delta * Math.cos(angle)\r\n    globalPoint.yVel = speed * Renderer.delta * Math.sin(angle)\r\n}\r\n\r\nwindow.addEventListener(\"touchmove\", (event) => onMousemove(event.touches[0]), false)\r\nwindow.addEventListener(\"mousemove\", (event) => onMousemove(event), false)","import { cursorPoint, globalPoint } from \"../../const.js\"\r\n\r\nfunction onMouseup(event) {\r\n    cursorPoint.isMouseDown = false\r\n    globalPoint.isReadyMove = false\r\n    globalPoint.startPoint = null\r\n}\r\n\r\nwindow.addEventListener(\"touchend\", onMouseup, false)\r\nwindow.addEventListener(\"mouseup\", onMouseup, false)","import { globalPoint, mainScene } from \"../../const.js\"\r\nimport utils from \"../../utils/index.js\"\r\n\r\nfunction addZoom(max, power) {\r\n    const currentZoom = mainScene.getZoom()\r\n    const isMobile = power !== 0.05\r\n\r\n    if (currentZoom >= max) return\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n        setTimeout(() => {\r\n            if (currentZoom >= max) return\r\n\r\n            let zoom = currentZoom + Math.lerp(power, currentZoom, power)\r\n\r\n            if (isMobile) {\r\n                zoom = currentZoom * power\r\n            }\r\n\r\n            mainScene.setZoom(zoom)\r\n        }, 5 * i)\r\n    }\r\n}\r\n\r\nfunction subZoom(min, power) {\r\n    const currentZoom = mainScene.getZoom()\r\n    const isMobile = power !== 0.05\r\n\r\n    if (currentZoom <= min) return\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n        setTimeout(() => {\r\n            if (currentZoom <= min) return\r\n\r\n            let zoom = currentZoom - Math.lerp(power, currentZoom, power)\r\n\r\n            if (isMobile) {\r\n                zoom = currentZoom / power\r\n            }\r\n            \r\n            mainScene.setZoom(zoom)\r\n        }, 5 * i)\r\n    }\r\n}\r\n\r\nlet isCanTouchZoom = false\r\nlet oldTouchDist = null\r\n\r\nwindow.addEventListener(\"touchmove\", (event) => {\r\n    const max = 2\r\n    const min = 0.1\r\n    const power = 1.1\r\n\r\n    if (event.touches.length === 2) {\r\n        const firstPoint = new utils.Point(event.touches[0].pageX, event.touches[0].pageY)\r\n        const secondPoint = new utils.Point(event.touches[1].pageX, event.touches[1].pageY)\r\n        const distance = firstPoint.distanceTo(secondPoint)\r\n        const dif = Math.abs(distance - oldTouchDist)\r\n\r\n        globalPoint.isReadyMove = false\r\n\r\n        if ((oldTouchDist != null && dif >= 5) || isCanTouchZoom) {\r\n            const index = Number(distance > oldTouchDist)\r\n\r\n            isCanTouchZoom = true\r\n\r\n            if (index) {\r\n                subZoom(min, power)\r\n            } else {\r\n                addZoom(max, power)\r\n            }\r\n        }\r\n\r\n        oldTouchDist = distance\r\n    }\r\n})\r\n\r\n\r\nwindow.addEventListener(\"touchstart\", () => {\r\n    oldTouchDist = null\r\n    isCanTouchZoom = false\r\n})\r\n    \r\nwindow.addEventListener(\"touchend\", () => {\r\n    oldTouchDist = null\r\n    isCanTouchZoom = false\r\n})\r\n\r\nwindow.addEventListener(\"wheel\", (event) => {\r\n    const max = 2\r\n    const min = 0.1\r\n    const power = 0.05\r\n\r\n    if (event.deltaY > 0) return addZoom(max, power)\r\n\r\n    subZoom(min, power)\r\n}, false)","import \"./dom/onMousedown.js\"\r\nimport \"./dom/onMouseup.js\"\r\nimport \"./dom/onMousemove.js\"\r\nimport \"./dom/onWheel.js\"","import { discordButton } from \"../../const.js\"\r\n\r\nexport default function onDiscordButtonClick() {\r\n    discordButton.lastShowTextCopied = Date.now()\r\n\r\n    navigator.clipboard.writeText(\"nudoo\")\r\n}","export default function onForumButtonClick() {\r\n    window.open(\"https://forum.arizona-rp.com/members/1735841/\", \"__blank\")\r\n}","export default function onServerButtonClick() {\r\n    window.open(\"https://forum.arizona-rp.com/forums/1986/\", \"__blank\")\r\n}","export default function onVKButtonClick() {\r\n    window.open(\"https://vk.com/nohak\", \"__blank\")\r\n}","import utils from \"../utils/index.js\"\r\nimport Renderer from \"./Renderer.js\"\r\n\r\nexport default class Camera extends utils.Point {\r\n    constructor(scene) {\r\n        super(0, 0, 0, 0)\r\n\r\n        this.tiedScene = scene\r\n\r\n        this.xOffset = 0\r\n        this.yOffset = 0\r\n    }\r\n\r\n    follow(point) {\r\n        const distance = this.distanceTo(point)\r\n        const angle = this.angleTo(point)\r\n        const speed = Math.min(distance * .01 * Renderer.delta, distance)\r\n\r\n        if (distance > .05) {\r\n            this.x += speed * Math.cos(angle)\r\n            this.y += speed * Math.sin(angle)\r\n        } else {\r\n            this.setTo(point.x, point.y)\r\n        }\r\n\r\n        this.xOffset = this.x - (this.tiedScene.getScaledWidth() / 2)\r\n        this.yOffset = this.y - (this.tiedScene.getScaledHeight() / 2)\r\n    }\r\n}","import utils from \"../utils/index.js\"\r\nimport { onAddRender, onInit, onUpdateLayers } from \"./RendererEvents.js\"\r\n\r\nexport default class Renderer extends utils.Emitter {\r\n    static delta = 0\r\n    static currentUpdateTime = 0\r\n    static lastUpdateTime = 0\r\n\r\n    constructor(scene) {\r\n        super()\r\n\r\n        this.tiedScene = scene\r\n\r\n        this.layers = new Array(3).fill(() => null).map(() => new Map())\r\n\r\n        this.on(\"init\", onInit.bind(this))\r\n        this.on(\"add-render\", onAddRender.bind(this))\r\n        this.on(\"update-layers\", onUpdateLayers.bind(this))\r\n    }\r\n\r\n    update() {\r\n        const context = this.tiedScene.getRenderContext()\r\n\r\n        context.save()\r\n        context.clearRect(0, 0, this.tiedScene.getScaledWidth(), this.tiedScene.getScaledHeight())\r\n\r\n        this.emit(\"update-layers\", 0)\r\n        context.restore()\r\n    }\r\n\r\n    static onFrame(callback) {\r\n        Renderer.currentUpdateTime = Date.now()\r\n        Renderer.delta = Renderer.currentUpdateTime - Renderer.lastUpdateTime\r\n        Renderer.lastUpdateTime = Renderer.currentUpdateTime\r\n\r\n        callback()\r\n\r\n        requestAnimationFrame(Renderer.onFrame.bind(Renderer, callback))\r\n    }\r\n}","export function onAddRender(layerId, callback) {\r\n    if (!(callback instanceof Function)) return false\r\n\r\n    const layer = this.layers[layerId]\r\n    \r\n    return layer.set(layer.size + 1, callback)\r\n}\r\n\r\nexport function onUpdateLayers() {\r\n    for (const layerId in this.layers) {\r\n        const layer = this.layers[layerId]\r\n\r\n        layer.forEach((callback) => {\r\n            callback()\r\n        })\r\n    }\r\n}\r\n\r\nexport function onInit() {}","import utils from \"../../utils/index.js\"\r\nimport drawBackground from \"./drawBackground.js\"\r\nimport drawTextCopied from \"./drawTextCopied.js\"\r\n\r\nexport default class Drawing extends utils.Emitter {\r\n    constructor(scene) {\r\n        super()\r\n\r\n        this.tiedScene = scene\r\n\r\n        this.on(\"draw-background\", drawBackground.bind(this.tiedScene))\r\n        this.on(\"draw-text-copied\", drawTextCopied.bind(this.tiedScene))\r\n    }\r\n}","import { globalPoint, mainConfig } from \"../../const.js\"\r\n\r\nexport default function drawBackground() {\r\n    const context = this.getRenderContext()\r\n\r\n    context.save()\r\n    context.fillStyle = mainConfig.colors.map\r\n\r\n    context.fillRect(0, 0, this.getScaledWidth(), this.getScaledHeight())\r\n    context.restore()\r\n}","import { discordButton, mainConfig } from \"../../const.js\"\r\nimport TextDraw from \"../../entities/TextDraw.js\"\r\n\r\nlet copiedText = null\r\n\r\nexport default function drawTextCopied() {\r\n    if (!copiedText) {\r\n        copiedText = new TextDraw(\"Copied!\", discordButton.x + discordButton.width / 2, discordButton.y + discordButton.height * 1.5, 24, mainConfig.colors.discordCopiedFill, mainConfig.colors.nicknameStroke, false, 2)\r\n    }\r\n\r\n    copiedText.update()\r\n}","import { mainConfig } from \"../const.js\"\r\nimport Camera from \"../render/Camera.js\"\r\nimport Renderer from \"../render/Renderer.js\"\r\nimport Drawing from \"../render/components/Drawing.js\"\r\nimport utils from \"../utils/index.js\"\r\nimport { onInit, onSceneResize } from \"./SceneEvents.js\"\r\n\r\nexport default class Scene extends utils.Emitter {\r\n    constructor(selector, viewport) {\r\n        super()\r\n\r\n        this.view = document.querySelector(selector)\r\n        \r\n        this.scale = 1\r\n        this.viewport = viewport || mainConfig.defaultViewport\r\n\r\n        this.renderer = new Renderer(this)\r\n        this.camera = new Camera(this)\r\n        this.drawing = new Drawing(this)\r\n\r\n        this.on(\"init\", onInit.bind(this))\r\n        this.on(\"scene-resize\", onSceneResize.bind(this))\r\n    }\r\n\r\n    getRenderContext() {\r\n        return this.view.getContext(\"2d\")\r\n    }\r\n\r\n    getScale() {\r\n        return this.scale\r\n    }\r\n\r\n    getZoom() {\r\n        return this.viewport.zoom\r\n    }\r\n\r\n    getXOffset() {\r\n        return this.camera.xOffset\r\n    }\r\n\r\n    getYOffset() {\r\n        return this.camera.yOffset\r\n    }\r\n\r\n    getWidth() {\r\n        return this.view.width\r\n    }\r\n\r\n    getHeight() {\r\n        return this.view.height\r\n    }\r\n\r\n    getScaledWidth() {\r\n        return this.getWidth() / this.getScale()\r\n    }\r\n\r\n    getScaledHeight() {\r\n        return this.getHeight() / this.getScale()\r\n    }\r\n\r\n    setScale(scale) {\r\n        if (typeof scale === 'string') {\r\n            scale = scale.toNumber()\r\n        }\r\n\r\n        this.scale = scale\r\n    }\r\n\r\n    setZoom(zoom) {\r\n        if (typeof zoom === 'string') {\r\n            zoom = zoom.toNumber()\r\n        }\r\n\r\n        this.viewport.zoom = zoom\r\n\r\n        this.emit(\"scene-resize\")\r\n    }\r\n\r\n    setSize(width, height) {\r\n        this.view.width = width\r\n        this.view.height = height\r\n\r\n        this.view.style.width = width.toPixels()\r\n        this.view.style.height = height.toPixels()\r\n    }\r\n}","import { discordButton, globalPoint, mainConfig } from \"../const.js\"\r\nimport ButtonBox from \"../entities/ButtonBox.js\"\r\nimport ImageBox from \"../entities/ImageBox.js\"\r\nimport TextDraw from \"../entities/TextDraw.js\"\r\n\r\nexport function onSceneResize() {\r\n    const screenWidth = window.innerWidth\r\n    const screenHeight = window.innerHeight\r\n    const context = this.getRenderContext()\r\n    const scale = Math.max(\r\n        screenWidth / (this.viewport.width * this.getZoom()), \r\n        screenHeight / (this.viewport.height * this.getZoom())\r\n    )\r\n\r\n    this.setScale(scale)\r\n    this.setSize(screenWidth, screenHeight)\r\n\r\n    context.scale(scale, scale)\r\n}\r\n\r\nexport function onInit() {\r\n    this.emit(\"scene-resize\")\r\n    this.renderer.emit(\"init\")\r\n\r\n    this.renderer.emit(\"add-render\", mainConfig.SYSTEM_LAYER, () => {\r\n        this.camera.follow(globalPoint)\r\n\r\n        this.drawing.emit(\"draw-background\")\r\n    })\r\n\r\n    this.renderer.emit(\"add-render\", mainConfig.ENTITIES_LAYER, () => {\r\n        globalPoint.update()\r\n        TextDraw.updateAllTextDraws()\r\n        ButtonBox.updateAllButtonBoxes()\r\n        ImageBox.updateAllImageBoxes()\r\n    })\r\n\r\n    this.renderer.emit(\"add-render\", mainConfig.ESP_LAYER, () => {\r\n        if (discordButton.lastShowTextCopied) {\r\n            if (Date.now() - discordButton.lastShowTextCopied > 750) {\r\n                discordButton.lastShowTextCopied = null\r\n            } else {\r\n                this.drawing.emit(\"draw-text-copied\")\r\n            }\r\n        }\r\n    })\r\n\r\n    window.addEventListener(\"resize\", () => this.emit(\"scene-resize\"))\r\n}","import Vector from \"./Vector.js\"\r\n\r\nclass Line {\r\n    constructor({ x, y, dx, dy }) {\r\n        this.origin = new Vector(x, y)\r\n        this.direction = new Vector(dx, dy)\r\n    }\r\n}\r\n\r\nexport default Line","import Vector from \"./Vector.js\"\r\n\r\nclass Physics {\r\n    constructor(x, y, mass = 5, time = 0.9) {\r\n        this.mass = mass\r\n        this.time = time\r\n\r\n        this.position = new Vector(x, y)\r\n        this.velocity = new Vector()\r\n        this.acceleration = new Vector()\r\n        this.force = new Vector()\r\n\r\n        this.position.lastX = this.position.x\r\n        this.position.lastY = this.position.y\r\n\r\n        this.velocity.lastX = this.velocity.x\r\n        this.velocity.lastY = this.velocity.y\r\n    }\r\n\r\n    updatePhysics() {\r\n        this.position.lastX = this.position.x\r\n        this.position.lastY = this.position.y\r\n\r\n        this.velocity.lastX = this.velocity.x\r\n        this.velocity.lastY = this.velocity.y\r\n\r\n        this.force.div(this.mass)\r\n\r\n        this.acceleration.add(this.force.x, this.force.y)\r\n        this.acceleration.mult(this.time)\r\n\r\n        this.velocity.add(this.acceleration.x, this.acceleration.y)\r\n        this.velocity.mult(this.time)\r\n\r\n        this.position.add(this.velocity.x, this.velocity.y)\r\n    }\r\n\r\n    resetPhysics() {\r\n        this.force.reset()\r\n        this.acceleration.reset()\r\n        this.velocity.reset()\r\n    }\r\n}\r\n\r\nexport default Physics","import Vector from \"./Vector.js\"\r\nimport Physics from \"./Physics.js\"\r\nimport toVector from \"./toVector.js\"\r\n\r\nclass Point extends Physics {\r\n    constructor(x, y, width, height) {\r\n        height = height || width\r\n\r\n        super(x, y)\r\n\r\n        this.width = width || 0\r\n        this.height = height || 0\r\n    }\r\n\r\n    get x() {\r\n        return this.position.x\r\n    }\r\n\r\n    get y() {\r\n        return this.position.y\r\n    }\r\n\r\n    get lastX() {\r\n        return this.position.lastX - this.width / 2\r\n    }\r\n\r\n    get lastY() {\r\n        return this.position.lastY - this.height / 2\r\n    }\r\n\r\n    set x(number) {\r\n        this.position.set(number + this.width / 2, this.position.y)\r\n    }\r\n\r\n    set y(number) {\r\n        this.position.set(this.position.x, number + this.height / 2)\r\n    }\r\n\r\n    get clone() {\r\n        return new Point(this.position.x, this.position.y, this.width, this.height)\r\n    }\r\n\r\n    setTo(x, y) {\r\n        const vector = toVector(x, y)\r\n        \r\n        this.position.set(vector)\r\n    }\r\n\r\n    copyFrom(point) {\r\n        this.setTo(point.position.x, point.position.y)\r\n    }\r\n\r\n    copyTo(point) {\r\n        point.setTo(point.position.x, point.position.y)\r\n    }\r\n\r\n    distanceTo(x, y) {\r\n        if (x instanceof Point) {\r\n            x = new Vector(x.x, x.y)\r\n        }\r\n\r\n        const myPoistion = toVector(this.x, this.y)\r\n        const otherPosition = toVector(x, y)\r\n\r\n        return myPoistion.distanceTo(otherPosition)\r\n    }\r\n\r\n    angleTo(x, y) {\r\n        if (x instanceof Point) {\r\n            x = new Vector(x.x, x.y)\r\n        }\r\n\r\n        const myPoistion = toVector(this.x, this.y)\r\n        const otherPosition = toVector(x, y)\r\n\r\n        return myPoistion.angleTo(otherPosition)\r\n    }\r\n}\r\n\r\nexport default Point","import Line from \"./Line.js\";\r\nimport Vector from \"./Vector.js\"\r\n\r\nclass Rect {\r\n    constructor({ x, y, width, height, angle }) {\r\n        this.center = new Vector(x, y)\r\n        this.size = new Vector(width, height)\r\n        this.angle = angle\r\n    }\r\n\r\n    getAxis() {\r\n        const originX = new Vector(1, 0)\r\n        const originY = new Vector(0, 1)\r\n        const rotatedX = originX.getRotate(this.angle)\r\n        const rotatedY = originY.getRotate(this.angle)\r\n\r\n        return [\r\n            new Line({ x: this.center.x, y: this.center.y, dx: rotatedX.x, dy: rotatedX.y }),\r\n            new Line({ x: this.center.x, y: this.center.y, dx: rotatedY.x, dy: rotatedY.y })\r\n        ]\r\n    }\r\n\r\n    getCorners() {\r\n        const axis = this.getAxis()\r\n        const rotatedX = axis[0].direction.getMult(this.size.x / 2)\r\n        const rotatedY = axis[1].direction.getMult(this.size.y / 2)\r\n\r\n        return [\r\n            this.center.getAdd(rotatedX).getAdd(rotatedY),\r\n            this.center.getAdd(rotatedX).getAdd(rotatedY.getMult(-1)),\r\n            this.center.getAdd(rotatedX.getMult(-1)).getAdd(rotatedY.getMult(-1)),\r\n            this.center.getAdd(rotatedX.getMult(-1)).getAdd(rotatedY)\r\n        ]\r\n    }\r\n}\r\n\r\nexport default Rect","import toVector from \"./toVector.js\"\r\n\r\nclass Vector {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n\r\n    static random2D(angle, length = 1) {\r\n        return new Vector(length * Math.cos(angle), length * Math.sin(angle))\r\n    }\r\n\r\n    get magnitude() {\r\n        return Math.sqrt(this.x ** 2 + this.y ** 2)\r\n    }\r\n\r\n    get copy() {\r\n        return new Vector(this.x, this.y)\r\n    }\r\n\r\n    getRotate(angle) {\r\n        return new Vector(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle))\r\n    }\r\n\r\n    getProject(line) {\r\n        const dot = line.direction.x * (this.x - line.origin.x) + line.direction.y * (this.y - line.origin.y)\r\n\r\n        return new Vector(line.origin.x + line.direction.x * dot, line.origin.y + line.direction.y * dot)\r\n    }\r\n\r\n    getAdd(x, y) {\r\n        const vector = toVector(x, y)\r\n        \r\n        return new Vector(this.x + vector.x, this.y + vector.y)\r\n    }\r\n\r\n    getMinus(x, y) {\r\n        const vector = toVector(x, y)\r\n\r\n        return new Vector(this.x - vector.x, this.y - vector.y)\r\n    }\r\n\r\n    getMult(x, y) {\r\n        const vector = toVector(x, y)\r\n\r\n        return new Vector(this.x * vector.x, this.y * vector.y)\r\n    }\r\n\r\n    setMag(length) {\r\n        return this.normalize().mult(length)\r\n    }\r\n\r\n    different(x, y) {\r\n        const vector = toVector(x, y)\r\n\r\n        return new Vector(this.x - vector.x, this.y - vector.y)\r\n    }\r\n\r\n    set(x, y) {\r\n        const vector = toVector(x, y)\r\n\r\n        this.x = vector.x\r\n        this.y = vector.y\r\n\r\n        return this\r\n    }\r\n\r\n    add(x, y) {\r\n        const vector = toVector(x, y)\r\n\r\n        this.x += vector.x\r\n        this.y += vector.y\r\n\r\n        return this\r\n    }\r\n\r\n    sub(x, y) {\r\n        const vector = toVector(x, y)\r\n\r\n        this.x -= vector.x\r\n        this.y -= vector.y\r\n\r\n        return this\r\n    }\r\n\r\n    mult(x, y) {\r\n        const vector = toVector(x, y)\r\n\r\n        this.x *= vector.x\r\n        this.y *= vector.y\r\n\r\n        return this\r\n    }\r\n\r\n    div(x, y) {\r\n        const vector = toVector(x, y)\r\n\r\n        this.x /= vector.x\r\n        this.y /= vector.y\r\n\r\n        return this\r\n    }\r\n\r\n    mulScalar(scalar) {\r\n        const vector = toVector(scalar)\r\n\r\n        this.x *= vector.x\r\n        this.y *= vector.y\r\n\r\n        return this\r\n    }\r\n\r\n    normalize() {\r\n        const magnitude = this.magnitude\r\n\r\n        if (magnitude <= 0) return this\r\n\r\n        return new Vector(this.x, this.y).div(magnitude || 1)\r\n    }\r\n\r\n    projection(vector) {\r\n        const normalized = vector.normalize()\r\n        const scalar = this.mulScalar(vector)\r\n\r\n        normalized.mult(scalar)\r\n\r\n        return normalized\r\n    }\r\n\r\n    clamp(min, max) {\r\n\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x))\r\n\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y))\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n    floor() {\r\n\t\tthis.x = Math.floor(this.x)\r\n\t\tthis.y = Math.floor(this.y)\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n    dot(vector) {\r\n\t\treturn this.x * vector.x + this.y * vector.y\r\n\t}\r\n\r\n\tcross(vector) {\r\n\t\treturn this.x * vector.y - this.y * vector.x\r\n\t}\r\n\r\n\tlengthSq() {\r\n\t\treturn this.x * this.x + this.y * this.y\r\n\t}\r\n\r\n    length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y)\r\n    }\r\n\r\n    lerp(vector, alpha) {\r\n\t\tthis.x += (vector.x - this.x) * -alpha\r\n\t\tthis.y += (vector.y - this.y) * -alpha\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n    lerpVectors(vector1, vector2, alpha) {\r\n\t\tthis.x = vector1.x + (vector2.x - vector1.x) * alpha\r\n\t\tthis.y = vector1.y + (vector2.y - vector1.y) * alpha\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n    distanceTo(x, y) {\r\n        const vector = toVector(x, y)\r\n\r\n        return this.copy.sub(vector).length()\r\n    }\r\n\r\n    angleTo(x, y) {\r\n        const vector = toVector(x, y)\r\n        const copy = vector.copy.sub(this)\r\n\r\n        return Math.atan2(copy.y, copy.x)\r\n    }\r\n\r\n    random() {\r\n\t\tthis.x = Math.random()\r\n\t\tthis.y = Math.random()\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n    reset() {\r\n        this.x = 0\r\n        this.y = 0\r\n\r\n        return this\r\n    }\r\n\r\n    log() {\r\n        console.log(this.x, this.y)\r\n    }\r\n}\r\n\r\nexport default Vector","import Vector from \"./Vector.js\"\r\n\r\nfunction getSignedDistance(rect, line, corner) {\r\n    const projected = corner.getProject(line)\r\n    const center = projected.getMinus(rect.center)\r\n    const sign = (center.x * line.direction.x) + (center.y * line.direction.y) > 0\r\n    const signedDistance = center.magnitude * (sign ? 1 : -1)\r\n\r\n    return signedDistance\r\n}\r\n\r\nexport default getSignedDistance","import Line from \"./Line.js\"\r\nimport Physics from \"./Physics.js\"\r\nimport Point from \"./Point.js\"\r\nimport Rect from \"./Rect.js\"\r\nimport Vector from \"./Vector.js\"\r\nimport getSignedDistance from \"./getSignedDistance.js\"\r\nimport toVector from \"./toVector.js\"\r\n\r\nexport {\r\n    Vector,\r\n    Point,\r\n    Rect,\r\n    Line,\r\n    Physics,\r\n    toVector,\r\n    getSignedDistance\r\n}","import Vector from \"./Vector.js\"\r\n\r\nfunction toVector(x, y) {\r\n    let vector = null\r\n\r\n    if (arguments[0] instanceof Vector) {\r\n        vector = new Vector(arguments[0].x, arguments[0].y)\r\n    } else if (typeof arguments[0] === 'number' && typeof arguments[1] === 'undefined') {\r\n        vector = new Vector(arguments[0], arguments[0])\r\n    } else if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\r\n        vector = new Vector(x, y)\r\n    } else {\r\n        vector = new Vector(0, 0)\r\n    }\r\n\r\n    return vector\r\n}\r\n\r\nexport default toVector","class Emitter {\r\n    constructor() {\r\n        this._events = new Map()\r\n    }\r\n\r\n    has(eventName) {\r\n        return this._events.has(eventName)\r\n    }\r\n\r\n    on(eventName, listener) {\r\n        const listeners = this._events.get(eventName)\r\n\r\n        if (!listeners) {\r\n            this._events.set(eventName, [ listener ])\r\n\r\n            return\r\n        }\r\n\r\n        listeners.push(listener)\r\n    }\r\n\r\n    emit(eventName, ...args) {\r\n        if (!this._events.has(eventName)) return\r\n\r\n        this._events.get(eventName).forEach((listener) => {\r\n            listener(...args)\r\n        })\r\n    }\r\n}\r\n\r\nexport default Emitter","import \"./string_hooks.js\"\r\nimport \"./number_hooks.js\"\r\nimport \"./math_hooks.js\"","Math.lerp = function(value1, value2, amount) {\r\n    return value1 + (value2 - value1) * amount\r\n}","Number.prototype.toString = function() {\r\n    return String(this)\r\n}\r\n\r\nNumber.prototype.toPixels = function() {\r\n    return `${(this < 0 ? 0 : this)}px`\r\n}","String.prototype.toNumber = function() {\r\n    return parseFloat(this)\r\n}\r\n\r\nString.prototype.toPixels = function() {\r\n    const number = this.toNumber()\r\n\r\n    return `${(number < 0 ? 0 : number)}px`\r\n}","import * as GraphicsUtils from \"./2d/index.js\"\r\nimport Emitter from \"./Emitter.js\"\r\nimport \"./hooks/index.js\"\r\n\r\nconst utils = Object.assign({\r\n    Emitter,\r\n    wait(ms) {\r\n        return new Promise((resolve) => setTimeout(resolve, ms))\r\n    }\r\n}, GraphicsUtils)\r\n\r\nexport default utils","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { cursorPoint, discordButton, forumButton, globalPoint, mainConfig, mainScene, serverButton, vkButton } from \"./const.js\"\r\nimport Renderer from \"./render/Renderer.js\"\r\nimport \"./utils/index.js\"\r\nimport \"./events/initEvents.js\"\r\nimport onServerButtonClick from \"./events/system/onServerButtonClick.js\"\r\nimport onVKButtonClick from \"./events/system/onVKButtonClick.js\"\r\nimport onDiscordButtonClick from \"./events/system/onDiscordButtonClick.js\"\r\nimport onForumButtonClick from \"./events/system/onForumButtonClick.js\"\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n    mainScene.emit(\"init\")\r\n\r\n    serverButton.events.on(\"click\", onServerButtonClick)\r\n    vkButton.events.on(\"click\", onVKButtonClick)\r\n    discordButton.events.on(\"click\", onDiscordButtonClick)\r\n    forumButton.events.on(\"click\", onForumButtonClick)\r\n\r\n    Renderer.onFrame(() => {\r\n        mainScene.renderer.update()\r\n    })\r\n}, false)\r\n"],"names":[],"sourceRoot":""}